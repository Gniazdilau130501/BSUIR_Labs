@Component

Эта строка помечает класс ResultCalculations как компонент Spring. Это означает,
 что Spring будет управлять созданием экземпляров этого класса и предоставлять его для использования в других компонентах.

Принцип работы этой программы заключается в следующем:

В классе ResultController определен HTTP-эндпоинт "/params", который принимает параметры A, B и C через запрос GET. 
Этот эндпоинт обрабатывает запросы на выполнение математических операций над A и B в соответствии с оператором C.

Перед выполнением операции, метод params вызывает метод validate из класса ResultValidation, чтобы проверить корректность аргументов. 
Если аргументы некорректны, генерируется исключение IllegalURLArgumentsException.

После валидации аргументов, проверяется наличие результата в кэше. Если результат уже находится в кэше, 
он извлекается из него. В противном случае, вызывается метод getResult из класса ResultCalculations,
 который выполняет соответствующую математическую операцию.

Полученный результат сохраняется в кэше для последующих запросов с теми же аргументами.

Наконец, создается и возвращается объект ResultResponse, содержащий счетчик операций Counter.getCounter()
 и результат операции.

Класс Counter содержит статический счетчик, который инкрементируется при каждом вызове метода Counter.increment().
 Это позволяет отслеживать общее количество выполненных операций.

Класс CounterThread представляет собой поток, который инкрементирует счетчик при старте.

Класс IllegalURLArgumentsException представляет исключение, которое выбрасывается в случае некорректных
 аргументов URL.

Классы ResultValidation и ResultCalculations выполняют валидацию аргументов и расчет
 результата соответственно.

В классе Cache представлена реализация кэша для хранения результатов операций